from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain_community.document_loaders import TextLoader,UnstructuredFileLoader, DirectoryLoader
from langchain.embeddings import HuggingFaceEmbeddings
from langchain.vectorstores import FAISS

Data_path = ""
DB_Faiss_Path = "vectorstores/db_faiss"

#create cector database
def create_vector_db():
    loader = TextLoader("")
    document = loader.load()
    text_splitter = RecursiveCharacterTextSplitter(chunk_size=500,chunk_overlap = 50)
    texts = text_splitter.split_documents(document)
    
    embeddings = HuggingFaceEmbeddings(model_name = 'sentence-transformers/all-MiniLM-L6-v2',
    model_kwargs = {'device':'cpu'})
    
    db = FAISS.from_documents(texts,embeddings)
    db.save_local(DB_Faiss_Path)
    
if __name__ == '__main__':
    create_vector_db()
    
